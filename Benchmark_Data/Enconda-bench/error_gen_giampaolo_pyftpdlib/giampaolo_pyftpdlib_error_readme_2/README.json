{
  "readme": "giampaolo_pyftpdlib_error_readme_2",
  "repo_name": "giampaolo_pyftpdlib",
  "level": "level2",
  "errors": [
    {
      "error_type": "E7",
      "error_description": "The command uses `python` instead of `python3` and incorrectly states that the library requires Python 2.7, which is outdated information. The library is compatible with modern Python 3 versions.",
      "correction_candidates": [
        "Change the command to `python3 -m pyftpdlib --write` and remove the note about Python 2.7.",
        "The command is correct, but the library should be installed via `pip2 install pyftpdlib`.",
        "The note is correct. You must use a Python 2.7 environment to run the server.",
        "Change the command to `python3.6 -m pyftpdlib --write` as it only works with Python 3.6."
      ],
      "golden_answer": "Change the command to `python3 -m pyftpdlib --write` and remove the note about Python 2.7."
    },
    {
      "error_type": "E4",
      "error_description": "The example code specifies a user home directory `/var/ftp/user` and incorrectly claims it will be created automatically. The specified directory must exist beforehand, as `DummyAuthorizer` does not create it.",
      "correction_candidates": [
        "Change the path to a directory that is guaranteed to exist, like `/tmp`.",
        "The code is correct; permissions in `/var/ftp/` need to be adjusted for it to work.",
        "Replace `DummyAuthorizer` with `FileSystemAuthorizer` to enable automatic directory creation.",
        "Change the path to an existing directory (e.g., '/home/user') or ensure '/var/ftp/user' is created manually before running the server, and remove the misleading comment."
      ],
      "golden_answer": "Change the path to an existing directory (e.g., '/home/user') or ensure '/var/ftp/user' is created manually before running the server, and remove the misleading comment."
    }
  ]
}