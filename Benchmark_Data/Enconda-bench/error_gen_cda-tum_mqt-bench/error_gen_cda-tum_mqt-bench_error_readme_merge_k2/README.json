{
  "readme": "error_gen_cda-tum_mqt-bench_error_readme_merge_k2",
  "repo_name": "cda-tum_mqt-bench",
  "level": "level4",
  "errors": [
    {
      "error_type": "E6",
      "error_description": "The installation instructions incorrectly place the `pip install` command before the creation and activation of the virtual environment, which means the package will be installed globally instead of in the isolated environment.",
      "correction_candidates": [
        "First, run `pip install mqt.bench --user` to install the package for the current user, then create the virtual environment.",
        "The commands should be run in a single line: `pip install mqt.bench && python3 -m venv venv && source venv/bin/activate`",
        "The correct order is to create the virtual environment, activate it, and then install the package. The commands should be:\n```console\n$ python3 -m venv venv\n$ source venv/bin/activate\n(venv) $ pip install mqt.bench\n```",
        "The `pip install` command should be moved to the end, but the `(venv)` prompt should be removed for clarity."
      ],
      "golden_answer": "The correct order is to create the virtual environment, activate it, and then install the package. The commands should be:\n```console\n$ python3 -m venv venv\n$ source venv/bin/activate\n(venv) $ pip install mqt.bench\n```"
    },
    {
      "error_type": "E2",
      "error_description": "The example code uses a non-existent function `get_algorithm` instead of the correct `get_benchmark` function, which will cause a `NameError`.",
      "correction_candidates": [
        "Change the function call from `get_algorithm` to `get_benchmark`.",
        "Add an import alias: `from mqt.bench import get_benchmark as get_algorithm`.",
        "Change the import statement to `from mqt.bench import get_algorithm`.",
        "The function name is `Benchmark`, so the line should be `qc_algorithmic_level = Benchmark(benchmark_name=\"dj\", level=\"alg\", circuit_size=5)`."
      ],
      "golden_answer": "Change the function call from `get_algorithm` to `get_benchmark`."
    },
    {
      "error_type": "E1",
      "error_description": "The installation instructions unnecessarily require the user to install `qiskit` before installing `mqt.bench`, adding a dependency that is not needed for the core functionality shown.",
      "correction_candidates": [
        "The two packages should be installed in a single command: `pip install qiskit mqt.bench`.",
        "A specific version of `qiskit` should be installed: `pip install qiskit==0.45.0`.",
        "`qiskit` is not a required dependency for the base package, so the instruction `(venv) $ pip install qiskit` and the preceding sentence should be removed.",
        "The order is wrong; `mqt.bench` should be installed before `qiskit`."
      ],
      "golden_answer": "`qiskit` is not a required dependency for the base package, so the instruction `(venv) $ pip install qiskit` and the preceding sentence should be removed."
    },
    {
      "error_type": "E4",
      "error_description": "The URL for the main showcase image is incorrect. It points to `.../cda-tum/mqt-bench/...` which will result in a 404 error, as the image is hosted in the `mqtbench` repository, not the `mqt-bench` one.",
      "correction_candidates": [
        "The image URL should be a relative path to the `docs` folder: `docs/_static/mqtbench.png`.",
        "The branch name in the URL should be changed from `main` to `master`.",
        "The repository name in the image's URL path should be corrected from `mqt-bench` to `mqtbench`.",
        "The image file name is incorrect and should be `mqt_bench.png`."
      ],
      "golden_answer": "The repository name in the image's URL path should be corrected from `mqt-bench` to `mqtbench`."
    }
  ]
}