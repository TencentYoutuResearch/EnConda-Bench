{
  "readme": "error_gen_pgeu_pgeu-system_error_readme_merge_k6",
  "repo_name": "pgeu_pgeu-system",
  "level": "level9",
  "errors": [
    {
      "error_type": "E6",
      "error_description": "The Python dependencies are installed globally using `pip` before the virtual environment is created and activated, which can lead to system-wide package conflicts.",
      "correction_candidates": [
        "Move the `pip install -r requirements.txt` command to be after the `source venv/bin/activate` command.",
        "Combine the venv creation and pip install into one step: `python3 -m venv venv && ./venv/bin/pip install -r requirements.txt`.",
        "Remove the virtual environment steps and install dependencies globally.",
        "Use `pipenv install` instead of `pip` and `venv`."
      ],
      "golden_answer": "Move the `pip install -r requirements.txt` command to be after the `source venv/bin/activate` command."
    },
    {
      "error_type": "E2",
      "error_description": "The command `python3 -m venv --virtual .venv` uses a non-existent flag `--virtual`, causing the command to fail.",
      "correction_candidates": [
        "Remove the `--virtual` flag. The correct command is `python3 -m venv .venv`.",
        "Replace `python3 -m venv --virtual .venv` with `virtualenv .venv`.",
        "Change the flag to `--name`: `python3 -m venv --name .venv`.",
        "Correct the command to `python3 --m venv .venv`."
      ],
      "golden_answer": "Remove the `--virtual` flag. The correct command is `python3 -m venv .venv`."
    },
    {
      "error_type": "E1",
      "error_description": "The command `pip install django postgres` attempts to install the wrong package for PostgreSQL connectivity (`postgres` instead of `psycopg2-binary`) and misses other required project dependencies.",
      "correction_candidates": [
        "Replace `pip install django postgres` with `pip install -r requirements.txt` to install all necessary dependencies.",
        "Change the command to `pip install django psycopg2`.",
        "Change the command to `pip install django-postgres`.",
        "Replace `pip install django postgres` with `pip install django psycopg2-binary`."
      ],
      "golden_answer": "Replace `pip install django postgres` with `pip install -r requirements.txt` to install all necessary dependencies."
    },
    {
      "error_type": "E4",
      "error_description": "The command to copy the local settings file references a non-existent template file `pgeu/settings/local.py.template`.",
      "correction_candidates": [
        "Change the source file path to `pgeu/settings/local.py.pgeusystem.template`.",
        "Change the command to `mv pgeu/settings/local.py.template pgeu/settings/local.py`.",
        "Create the file `pgeu/settings/local.py.template` before copying it.",
        "Change the source file path to `settings/local.py.template`."
      ],
      "golden_answer": "Change the source file path to `pgeu/settings/local.py.pgeusystem.template`."
    },
    {
      "error_type": "E6",
      "error_description": "The database migration step is executed before Python dependencies (like Django) are installed, which will cause the `manage.py` script to fail.",
      "correction_candidates": [
        "Swap the 'Install Python dependencies' step with the 'Set up the database and run migrations' step.",
        "Combine the installation and migration into a single script.",
        "Run `pip install django` before the migration step, and the rest of the dependencies after.",
        "Remove the migration step, as it's not always necessary for setup."
      ],
      "golden_answer": "Swap the 'Install Python dependencies' step with the 'Set up the database and run migrations' step."
    },
    {
      "error_type": "E2",
      "error_description": "The command `python manage.py run` is incorrect for starting the Django development server.",
      "correction_candidates": [
        "Replace `run` with `runserver`. The correct command is `python manage.py runserver`.",
        "Change the command to `django-admin runserver`.",
        "Change the command to `python manage.py start`.",
        "Use a wsgi server like gunicorn: `gunicorn pgeu.wsgi`."
      ],
      "golden_answer": "Replace `run` with `runserver`. The correct command is `python manage.py runserver`."
    },
    {
      "error_type": "E6",
      "error_description": "Installing pip dependencies before creating a virtual environment, which is incorrect order",
      "correction_candidates": [
        "python -m venv pgeu_env\nsource pgeu_env/bin/activate\npip install -r requirements.txt",
        "python -m venv pgeu_env\npgeu_env\\Scripts\\activate\npip install -r requirements.txt",
        "virtualenv pgeu_env\nsource pgeu_env/bin/activate\npip install -r requirements.txt",
        "conda create -n pgeu_env python=3.8\nconda activate pgeu_env\npip install -r requirements.txt"
      ],
      "golden_answer": "python -m venv pgeu_env\nsource pgeu_env/bin/activate\npip install -r requirements.txt"
    },
    {
      "error_type": "E4",
      "error_description": "References requirements.txt file that may not exist in the repository",
      "correction_candidates": [
        "pip install django psycopg2-binary celery redis",
        "pip install -r requirements/base.txt",
        "pip install -e .",
        "pip install django>=3.2 psycopg2>=2.8 celery>=5.0"
      ],
      "golden_answer": "pip install -e ."
    },
    {
      "error_type": "E1",
      "error_description": "Installing incorrect package name 'postgresql-dev' instead of the correct package name",
      "correction_candidates": [
        "sudo apt-get install libpq-dev python3-dev",
        "sudo apt-get install postgresql-client-dev python3-dev",
        "sudo apt-get install postgresql-server-dev-all python3-dev",
        "sudo apt-get install postgresql-contrib python3-dev"
      ],
      "golden_answer": "sudo apt-get install libpq-dev python3-dev"
    }
  ]
}