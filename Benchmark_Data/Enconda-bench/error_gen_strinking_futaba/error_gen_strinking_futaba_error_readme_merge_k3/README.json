{
  "readme": "error_gen_strinking_futaba_error_readme_merge_k3",
  "repo_name": "strinking_futaba",
  "level": "level5",
  "errors": [
    {
      "error_type": "E2",
      "error_description": "The command to run the bot passes the config file as an argument instead of redirecting it to stdin, which will cause the application to fail.",
      "correction_candidates": [
        "python3 -m futaba --config config.toml",
        "python3 futaba.py <config.toml>",
        "python3 -m futaba < config.toml",
        "futaba --config config.toml"
      ],
      "golden_answer": "python3 -m futaba < config.toml"
    },
    {
      "error_type": "E7",
      "error_description": "The required Python version is specified as 'Python 3 or later', which is too broad and may cause compatibility issues as the project requires features from Python 3.6+.",
      "correction_candidates": [
        "Change the requirement to 'Requires Python 3.6 or later.'",
        "Change the requirement to 'Requires Python 3.6.'",
        "Add a python = \"^3.6\" entry to the pyproject.toml file.",
        "Change the requirement to 'Requires the latest version of Python 3.'"
      ],
      "golden_answer": "Change the requirement to 'Requires Python 3.6 or later.'"
    },
    {
      "error_type": "E6",
      "error_description": "The dependency installation step (`poetry install`) is listed after the database setup and configuration steps. The application dependencies should be installed before attempting to configure or run the application.",
      "correction_candidates": [
        "Move the `poetry install` command to be the first step in the 'Setup' section.",
        "Move the `poetry install` command to be the second step, after `pip3 install poetry`.",
        "Move the `poetry install` command to the 'To run' section, just before `python3 -m futaba`.",
        "Combine the first two steps into `pip3 install poetry && poetry install`."
      ],
      "golden_answer": "Move the `poetry install` command to be the second step, after `pip3 install poetry`."
    },
    {
      "error_type": "E2",
      "error_description": "The docker command to set the environment variable is syntactically incorrect. It is missing the '=' between the variable name and its value.",
      "correction_candidates": [
        "docker run --env POSTGRES_PASSWORD=password -p 5432:5432 postgres",
        "docker run -e POSTGRES_PASSWORD=\"password\" -p 5432:5432 postgres",
        "docker run -e POSTGRES_PASSWORD=password -p 5432:5432 postgres",
        "docker run -p 5432:5432 -e POSTGRES_PASSWORD=password postgres"
      ],
      "golden_answer": "docker run -e POSTGRES_PASSWORD=password -p 5432:5432 postgres"
    },
    {
      "error_type": "E1",
      "error_description": "The command to install development dependencies uses the `--dev` flag, which is incorrect for recent versions of Poetry. The correct flag is `--with dev`.",
      "correction_candidates": [
        "$ poetry add --group dev",
        "$ poetry install --only dev",
        "$ poetry install --with dev",
        "$ poetry install -G dev"
      ],
      "golden_answer": "$ poetry install --with dev"
    }
  ]
}