{
  "readme": "error_gen_automl_neps_error_readme_merge_k2",
  "repo_name": "automl_neps",
  "level": "level4",
  "errors": [
    {
      "error_type": "E7",
      "error_description": "The README incorrectly states that 'NePS requires Python 3.6 or higher', while the library's dependencies and syntax require Python 3.8 or higher.",
      "correction_candidates": [
        "NePS requires Python 3.6 or higher.",
        "NePS requires Python 3.7 or higher.",
        "NePS requires Python 3.8 or higher.",
        "NePS requires any version of Python 3."
      ],
      "golden_answer": "NePS requires Python 3.8 or higher."
    },
    {
      "error_type": "E2",
      "error_description": "In the `neps.run` function call, the parameter `max_evaluations=100` is used, but the correct parameter name is `max_evaluations_total`.",
      "correction_candidates": [
        "evaluations=100",
        "max_evaluations_total=100",
        "max_total_evaluations=100",
        "num_evaluations=100"
      ],
      "golden_answer": "max_evaluations_total=100"
    },
    {
      "error_type": "E1",
      "error_description": "The installation command `pip install neps` is incorrect. The package name on PyPI is `neural-pipeline-search`, not `neps`, which is the import name.",
      "correction_candidates": [
        "pip install neps-hpo",
        "pip install neural-pipeline-search",
        "pip install neps",
        "pip install neps-automl"
      ],
      "golden_answer": "pip install neural-pipeline-search"
    },
    {
      "error_type": "E2",
      "error_description": "In the `pipeline_space` definition, the argument `fidelity=True` is used for `neps.IntegerParameter`. The correct argument to specify a fidelity parameter is `is_fidelity=True`.",
      "correction_candidates": [
        "is_fidelity=True",
        "fidelity_param=True",
        "use_fidelity=True",
        "fidelity=True"
      ],
      "golden_answer": "is_fidelity=True"
    }
  ]
}