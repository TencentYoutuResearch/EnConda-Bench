{
  "readme": "error_gen_asdf-format_asdf-standard_error_readme_merge_k3",
  "repo_name": "asdf-format_asdf-standard",
  "level": "level6",
  "errors": [
    {
      "error_type": "E1",
      "error_description": "The command to install development dependencies includes an incorrect package name, 'black-code', which does not exist. The correct package for the black code formatter is 'black'.",
      "correction_candidates": [
        "pip install pre-commit isort black",
        "pip install pre-commit isort black-formatter",
        "conda install pre-commit isort black",
        "pip install pre-commit isort py-black"
      ],
      "golden_answer": "pip install pre-commit isort black"
    },
    {
      "error_type": "E2",
      "error_description": "The command to run pre-commit on all files uses an incorrect flag, '--all_files'. The correct flag uses a hyphen, '--all-files'.",
      "correction_candidates": [
        "pre-commit run --all-files",
        "pre-commit --run --all-files",
        "pre-commit run --all",
        "pre-commit check --all-files"
      ],
      "golden_answer": "pre-commit run --all-files"
    },
    {
      "error_type": "E7",
      "error_description": "The instruction to 'Install Python on your system' is too generic and does not specify a version. This project requires a specific version range (Python 3.8+) for compatibility.",
      "correction_candidates": [
        "Update the instruction to: 'Install Python 3.8 or newer.'",
        "Update the instruction to: 'Install the latest version of Python 2.'",
        "The project is compatible with any Python version, so no change is needed.",
        "Update the instruction to: 'Install Anaconda Python.'"
      ],
      "golden_answer": "Update the instruction to: 'Install Python 3.8 or newer.'"
    },
    {
      "error_type": "E6",
      "error_description": "The dependencies are installed globally using pip before the virtual environment is created and activated. The installation step should occur after activating the virtual environment.",
      "correction_candidates": [
        "Move step 3 (pip install) to be after step 4 (virtual environment activation).",
        "Combine the commands into a single line: `python -m venv .venv && source .venv/bin/activate && pip install -r requirements-dev.txt`.",
        "Remove the virtual environment steps entirely.",
        "Use `conda env create -f environment.yml` instead of pip and venv."
      ],
      "golden_answer": "Move step 3 (pip install) to be after step 4 (virtual environment activation)."
    },
    {
      "error_type": "E1",
      "error_description": "The installation command for development tools is missing the 'pre-commit' package, which is necessary for running the git hooks mentioned in the next step.",
      "correction_candidates": [
        "Add `pre-commit` to the `pip install` command: `pip install black isort pre-commit`.",
        "Install pre-commit separately using `pip install --user pre-commit`.",
        "The project does not require pre-commit for development, it's optional.",
        "Install pre-commit using `conda install -c conda-forge pre-commit`."
      ],
      "golden_answer": "Add `pre-commit` to the `pip install` command: `pip install black isort pre-commit`."
    },
    {
      "error_type": "E2",
      "error_description": "The command 'sphinx-build docs docs/_build' is syntactically incorrect for building HTML documentation. It is missing the builder name flag, `-b`, and should specify the output format (e.g., 'html').",
      "correction_candidates": [
        "sphinx-build -b html docs/ docs/_build/html",
        "make html",
        "sphinx-build --builder html --source-dir docs --output-dir docs/_build",
        "cd docs && sphinx-build . _build"
      ],
      "golden_answer": "sphinx-build -b html docs/ docs/_build/html"
    }
  ]
}